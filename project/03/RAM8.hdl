// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM8.hdl
/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // 1. load 분배
    DMux8Way(in= load, sel= address,
     a= load0, b= out1, c= out2, d= out3, e= out4,
     f= out5, g= out6, h= out7);
    // address 주소를 수정하겠다 표시한다.(load:1) (열쇠 느낌)

    // 2. 8개 레지스터 -> 새로운 값 저장 (열려 있으면 수정한다)
    Register(in=in, load=load0, out=out0); // 개당 16비트
    Register(in=in, load=out1, out=out1out);
    Register(in=in, load=out2, out=out2out);
    Register(in=in, load=out3, out=out3out);
    Register(in=in, load=out4, out=out4out);
    Register(in=in, load=out5, out=out5out);
    Register(in=in, load=out6, out=out6out);
    Register(in=in, load=out7, out=out7out);
  
    Mux8Way16(a=out0, b=out1out, c=out2out, d=out3out,
        e=out4out, f=out5out, g=out6out, h=out7out,
        sel=address, out=out); // address주소값을 읽어온다 
    // 항상 틱 택 할 때 값을 출력중이다 -> 난 그걸 찾아서 읽는 것
    // 8개 register에서 특정 register를 찾는다.
}
